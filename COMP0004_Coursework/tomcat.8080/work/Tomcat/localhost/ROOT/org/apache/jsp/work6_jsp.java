/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2023-03-31 09:44:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import ucl.ac.uk.model.Item;
import java.util.ArrayList;
import java.util.Objects;

public final class work6_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Objects");
    _jspx_imports_classes.add("ucl.ac.uk.model.Item");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: Arial, Helvetica, sans-serif;\n");
      out.write("        }\n");
      out.write("        .column {\n");
      out.write("            float: left;\n");
      out.write("            width: 23.6%;\n");
      out.write("            padding: 0 10px;\n");
      out.write("        }\n");
      out.write("        .row {margin: 0 -5px;}\n");
      out.write("        .row:after {\n");
      out.write("            content: \"\";\n");
      out.write("            display: table;\n");
      out.write("            clear: both;\n");
      out.write("        }\n");
      out.write("        .card {\n");
      out.write("            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n");
      out.write("            padding: 5px;\n");
      out.write("            text-align: left;\n");
      out.write("            background-color: #f1f1f1;\n");
      out.write("            height: 220px;\n");
      out.write("        }\n");
      out.write("        @media screen and (max-width: 600px) {\n");
      out.write("            .column {\n");
      out.write("                width: 100%;\n");
      out.write("                display: block;\n");
      out.write("                margin-bottom: 20px;\n");
      out.write("            }\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("\n");
      out.write("    <title>List example v2</title>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
 ArrayList<Item> list = (ArrayList<Item>) request.getSession().getAttribute("list"); 
      out.write('\n');
      out.write('\n');



      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("<form action=\"work5Servlet\" method=\"post\">\n");
      out.write("\n");
      out.write("    <div class=\"row\">\n");
      out.write("\n");
      out.write("        <div class=\"column\">\n");
      out.write("            <div class=\"card\" >\n");
      out.write("\n");
      out.write("                <h3>Search List: </h3>\n");
      out.write("                <label>Select list:</label>\n");
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("                <input type=\"submit\" name=\"deleteElement\" value=\"Delete element\">\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("        <div class=\"column\">\n");
      out.write("            <div class=\"card\">\n");
      out.write("                <h3>Add Elements To The List: </h3>\n");
      out.write("                <label>\n");
      out.write("                    <input placeholder=\"Text\" type=\"text\" name=\"itemText\">\n");
      out.write("                </label><input type=\"submit\" value=\"Add Text\"><br>\n");
      out.write("                <br>\n");
      out.write("                <label>\n");
      out.write("                    <input placeholder=\"URL\" type=\"text\" name=\"itemUrl\">\n");
      out.write("                </label><input type=\"submit\" value=\"Add URL\"><br>\n");
      out.write("                <br>\n");
      out.write("                <label>\n");
      out.write("                    <input placeholder=\"Image URL\" type=\"text\" name=\"itemImage\">\n");
      out.write("                </label><input type=\"submit\" value=\"Add Image\"><br>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("        <div class=\"column\">\n");
      out.write("            <div class=\"card\">\n");
      out.write("                <h3>Edit Elements In The List: </h3>\n");
      out.write("                <label>\n");
      out.write("                    <select name=\"edit_text_elem_index\">\n");
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("                <label>\n");
      out.write("                    <input placeholder=\"Image URL\" type=\"text\" name=\"change_itemImage\">\n");
      out.write("                </label><input type=\"submit\" value=\"Change Image\"><br>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("        <div class=\"column\">\n");
      out.write("            <div class=\"card\">\n");
      out.write("                <h3>List Options</h3>\n");
      out.write("\n");
      out.write("                ");
      out.write("\n");
      out.write("                <input name=\"newList\" type=\"submit\" value=\"Create New List\"><br><br>\n");
      out.write("\n");
      out.write("                ");
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("                <input type=\"submit\" name=\"deleteList\" value=\"*Delete Selected List\"><br><br>\n");
      out.write("\n");
      out.write("                ");
      out.write("\n");
      out.write("                <label>\n");
      out.write("                    <input type=\"text\" name=\"listName\" placeholder=\"Enter new name...\">\n");
      out.write("                </label>\n");
      out.write("                <button type=\"submit\">**Rename</button>\n");
      out.write("                <h6>*When deleting a list, the list on screen must not be the list you want to delete.\n");
      out.write("                    **Name of list is the first element of the list</h6>\n");
      out.write("\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<hr>\n");
      out.write("\n");
      out.write("    ");
      out.write("\n");
      out.write("\n");
      out.write("    <ul>\n");
      out.write("        ");
 for (Item item : list) {  
      out.write("\n");
      out.write("        <li>");
      out.print( item.toString() );
      out.write("</li>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("    </ul>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
